services:
  postgres:
    image: postgres:13
    container_name: postgres-container
    environment:
      POSTGRES_USER: sonar
      POSTGRES_PASSWORD: sonar
      POSTGRES_DB: sonarqube
    volumes:
      - postgres-vol:/var/lib/postgresql/data
    networks:
      - sonarnet
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U sonar -d sonarqube"]
      interval: 20s
      timeout: 20s
      retries: 10
      start_period: 30s

  sonarqube:
    image: sonarqube:9.9-community
    container_name: sonarqube-container
    ports:
      - "9000:9000"
    environment:
      SONAR_JDBC_URL: jdbc:postgresql://postgres:5432/sonarqube
      SONAR_JDBC_USERNAME: sonar
      SONAR_JDBC_PASSWORD: sonar
    volumes:
      - sonarqube-data:/opt/sonarqube/data
      - sonarqube-logs:/opt/sonarqube/logs
      - sonarqube-extensions:/opt/sonarqube/extensions
    networks:
      - sonarnet
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:9000 || exit 1"]
      interval: 20s
      timeout: 20s
      retries: 10
      start_period: 50s
    restart: always
    depends_on:
      postgres:
        condition: service_healthy

volumes:
  postgres-vol: {}
  sonarqube-data: {}
  sonarqube-logs: {}
  sonarqube-extensions: {}

networks:
  sonarnet:
    driver: bridge
